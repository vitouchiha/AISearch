services:
  ai-stremio-search:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-stremio-search
    ports:
      - "${PORT}:${PORT}"
    env_file:
      - .env
    restart: always
    depends_on: 
      - ngrok  
      - redis
      - serverless-redis-http 
    command: [
      "deno",
      "run",
      "--allow-net",
      "--allow-env",
      "--allow-read",
      "--unstable-cron",
      "main.ts",
    ]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://ai-stremio-search:${PORT}/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - secure_net
  ngrok:
    container_name: ngrok
    image: ngrok/ngrok:latest
    env_file:
      - .env
    command:
      - "http"
      - "http://host.docker.internal:${PORT}"
    environment:
      NGROK_AUTHTOKEN: ${NGROK_TOKEN}
    ports:
      - 4040:4040
    networks:
      - secure_net
  redis:
    image: redis
    ports:
      - '6379:6379'
    networks:
      - secure_net
  redis-insight:
    image: redis/redisinsight:latest
    depends_on:
      - redis
    restart: always
    ports:
      - "5540:5540"
    volumes:
      - redis-insight:/data
    networks:
      - secure_net
  
  serverless-redis-http:
    env_file:
      - .env
    ports:
      - '8079:80'
    depends_on:
      - redis
    networks:
      - secure_net
    image: hiett/serverless-redis-http:latest
    environment:
      SRH_MODE: env
      SRH_TOKEN: ${UPSTASH_REDIS_REST_TOKEN}
      SRH_CONNECTION_STRING: 'redis://redis:6379'

networks:
  secure_net:
    driver: bridge
    
volumes:
  redis-insight:
